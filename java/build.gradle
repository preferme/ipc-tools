/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'

//    implementation project(':c')

}

// Apply a specific Java toolchain to ease working on different environments.
//java {
//    toolchain {
//        languageVersion = JavaLanguageVersion.of(8)
//    }
//}

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

//task copyLib(type: Copy) {
//    dependsOn ':jni:copyLib'
//    from rootDir.path + '/jni/build/lib'
//    into 'build/lib'
//    include '*.dylib'
//}

compileJava {
    dependsOn ':jni:build'
    doLast {
//        delete fileTree(dir: '.', includes: 'hs_err_pid*.log')
        copy {
            from 'build/classes/java/main'
            into 'out/production/classes'
            include '**/*.dll'
        }
        copy {
            from 'build/classes/java/main'
            into 'out/test/classes'
            include '**/*.dll'
        }
    }
    tasks.find {it.name.contains('test')}.enabled = false
}
//
jar {
//    dependsOn ':c:copyLib'
    baseName 'ipc-tools'
//    doFirst {
//        copy {
//            from rootDir.path + '/jin/build/lib'
//            into 'build/classes/java/main/META-INF/lib'
//            include '*.dylib'
//        }
//    }
}

clean {
    doLast {
//        exec {
//            workingDir rootDir.path + '/java'
//            commandLine "rm", "hs_err_pid*.log"
//        }
        delete rootDir.path + '/java/hs_err_pid*.log'
    }
}